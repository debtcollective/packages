/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface DcHeader {
        /**
          * URL to the community without the latest "/"
         */
        "community": string;
        /**
          * Link to follow in order to prompt user to donate
         */
        "donateurl": string;
        /**
          * URL to the homepage without the latest "/"
         */
        "homepage": string;
        /**
          * URL to the component host without the latest "/"
         */
        "host": string;
        /**
          * URL to the homepage without the latest "/"
         */
        "union": string;
    }
    interface DcLink {
        "class": string;
        "to": string;
    }
    interface DcMenu {
        /**
          * Wether or not the mobile menu is displayed
         */
        "open": boolean;
    }
    interface DcProfile {
        /**
          * URL to the community
         */
        "community": string;
        /**
          * Wether or not the profile menu is displayed
         */
        "expanded": boolean;
        /**
          * An object with the user data. Follows Discourse structure as https://docs.discourse.org/#tag/Users/paths/~1users~1{username}.json/get
         */
        "user": {
    id: number;
    admin: boolean;
    avatar_template: string;
    username: string;
    unread_notifications: number;
    unread_high_priority_notifications: number;
  };
    }
}
declare global {
    interface HTMLDcHeaderElement extends Components.DcHeader, HTMLStencilElement {
    }
    var HTMLDcHeaderElement: {
        prototype: HTMLDcHeaderElement;
        new (): HTMLDcHeaderElement;
    };
    interface HTMLDcLinkElement extends Components.DcLink, HTMLStencilElement {
    }
    var HTMLDcLinkElement: {
        prototype: HTMLDcLinkElement;
        new (): HTMLDcLinkElement;
    };
    interface HTMLDcMenuElement extends Components.DcMenu, HTMLStencilElement {
    }
    var HTMLDcMenuElement: {
        prototype: HTMLDcMenuElement;
        new (): HTMLDcMenuElement;
    };
    interface HTMLDcProfileElement extends Components.DcProfile, HTMLStencilElement {
    }
    var HTMLDcProfileElement: {
        prototype: HTMLDcProfileElement;
        new (): HTMLDcProfileElement;
    };
    interface HTMLElementTagNameMap {
        "dc-header": HTMLDcHeaderElement;
        "dc-link": HTMLDcLinkElement;
        "dc-menu": HTMLDcMenuElement;
        "dc-profile": HTMLDcProfileElement;
    }
}
declare namespace LocalJSX {
    interface DcHeader {
        /**
          * URL to the community without the latest "/"
         */
        "community"?: string;
        /**
          * Link to follow in order to prompt user to donate
         */
        "donateurl"?: string;
        /**
          * URL to the homepage without the latest "/"
         */
        "homepage"?: string;
        /**
          * URL to the component host without the latest "/"
         */
        "host"?: string;
        /**
          * Emit event to exposed fetched user on host application
         */
        "onUserSynced"?: (event: CustomEvent<User>) => void;
        /**
          * URL to the homepage without the latest "/"
         */
        "union"?: string;
    }
    interface DcLink {
        "class"?: string;
        "onLinkClicked"?: (event: CustomEvent<{ event: object; to: string }>) => void;
        "to"?: string;
    }
    interface DcMenu {
        "onToggleMenu"?: (event: CustomEvent<void>) => void;
        /**
          * Wether or not the mobile menu is displayed
         */
        "open"?: boolean;
    }
    interface DcProfile {
        /**
          * URL to the community
         */
        "community"?: string;
        /**
          * Wether or not the profile menu is displayed
         */
        "expanded"?: boolean;
        "onToggleProfileMenu"?: (event: CustomEvent<void>) => void;
        /**
          * An object with the user data. Follows Discourse structure as https://docs.discourse.org/#tag/Users/paths/~1users~1{username}.json/get
         */
        "user"?: {
    id: number;
    admin: boolean;
    avatar_template: string;
    username: string;
    unread_notifications: number;
    unread_high_priority_notifications: number;
  };
    }
    interface IntrinsicElements {
        "dc-header": DcHeader;
        "dc-link": DcLink;
        "dc-menu": DcMenu;
        "dc-profile": DcProfile;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "dc-header": LocalJSX.DcHeader & JSXBase.HTMLAttributes<HTMLDcHeaderElement>;
            "dc-link": LocalJSX.DcLink & JSXBase.HTMLAttributes<HTMLDcLinkElement>;
            "dc-menu": LocalJSX.DcMenu & JSXBase.HTMLAttributes<HTMLDcMenuElement>;
            "dc-profile": LocalJSX.DcProfile & JSXBase.HTMLAttributes<HTMLDcProfileElement>;
        }
    }
}
